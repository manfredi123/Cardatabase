{"ast":null,"code":"var _jsxFileName = \"/Users/manfredi/Documents/Spring Boot & React/Eclipse Workspace/carfront/src/Components/Carlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from './constants';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport, gridClasses } from '@mui/x-data-grid';\nimport { Snackbar } from '@mui/material';\nimport AddCar from './AddCar';\nimport EditCar from './EditCar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Carlist() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [open, setOpen] = useState(false);\n  const columns = [{\n    field: 'brand',\n    headerName: 'Brand',\n    width: 200\n  }, {\n    field: 'model',\n    headerName: 'Model',\n    width: 200\n  }, {\n    field: 'color',\n    headerName: 'Color',\n    width: 200\n  }, {\n    field: 'year',\n    headerName: 'Year',\n    width: 150\n  }, {\n    field: 'price',\n    headerName: 'Price',\n    width: 150\n  }, {\n    field: '_links.car.href',\n    headerName: '',\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(EditCar, {\n      data: row,\n      updateCar: updateCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }, {\n    field: '_links.self.href',\n    headerName: '',\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelClick(row.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }];\n  const fetchCars = () => {\n    fetch(SERVER_URL + 'api/cars').then(response => response.json()).then(data => setCars(data._embedded.cars)).catch(err => console.error(err));\n  };\n  const onDelClick = url => {\n    if (window.confirm(\"Are you sure to delete?\")) {\n      fetch(url, {\n        method: 'DELETE'\n      }).then(response => {\n        if (response.ok) {\n          fetchCars();\n          setOpen(true);\n        } else {\n          alert('Something went wrong!');\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n  const addCar = car => {\n    fetch(SERVER_URL + 'api/cars', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(car)\n    }).then(response => {\n      if (response.ok) fetchCars();else alert(\"Something went wrong!\");\n    }).catch(err => console.error(err));\n  };\n  const updateCar = (car, link) => {\n    fetch(link, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(car)\n    }).then(response => {\n      if (response.ok) fetchCars();else alert(\"Something went wrong!\");\n    }).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddCar, {\n      addCar: addCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: cars,\n        columns: columns,\n        disableRowSelectionOnClick: true,\n        getRowId: row => row._links.self.href,\n        slots: {\n          Toolbar: CustomToolbar\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: 2000,\n        onClose: () => setOpen(false),\n        message: \"Car deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(Carlist, \"OH+7Whk0tvwXHwlcQTvKJAJQ8rs=\");\n_c = Carlist;\nfunction CustomToolbar() {\n  return /*#__PURE__*/_jsxDEV(GridToolbarContainer, {\n    className: gridClasses.toolbarContainer,\n    children: /*#__PURE__*/_jsxDEV(GridToolbarExport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n_c2 = CustomToolbar;\nexport default Carlist;\nvar _c, _c2;\n$RefreshReg$(_c, \"Carlist\");\n$RefreshReg$(_c2, \"CustomToolbar\");","map":{"version":3,"names":["React","useEffect","useState","SERVER_URL","DataGrid","GridToolbarContainer","GridToolbarExport","gridClasses","Snackbar","AddCar","EditCar","jsxDEV","_jsxDEV","Carlist","_s","cars","setCars","open","setOpen","columns","field","headerName","width","sortable","filterable","renderCell","row","data","updateCar","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDelClick","id","children","fetchCars","fetch","then","response","json","_embedded","catch","err","console","error","url","window","confirm","method","ok","alert","addCar","car","headers","body","JSON","stringify","link","Fragment","style","height","rows","disableRowSelectionOnClick","getRowId","_links","self","href","slots","Toolbar","CustomToolbar","autoHideDuration","onClose","message","_c","className","toolbarContainer","_c2","$RefreshReg$"],"sources":["/Users/manfredi/Documents/Spring Boot & React/Eclipse Workspace/carfront/src/Components/Carlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from './constants';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport, gridClasses } from '@mui/x-data-grid';\nimport { Snackbar } from '@mui/material';\nimport AddCar from './AddCar';\nimport EditCar from './EditCar';\n\nfunction Carlist() {\n    const [cars, setCars] = useState([]);\n    const [open, setOpen] = useState(false);\n    const columns = [\n        {field: 'brand', headerName: 'Brand', width: 200},\n        {field: 'model', headerName: 'Model', width: 200},\n        {field: 'color', headerName: 'Color', width: 200},\n        {field: 'year', headerName: 'Year', width: 150},\n        {field: 'price', headerName: 'Price', width: 150},\n        {\n            field: '_links.car.href',\n            headerName: '',\n            sortable: false,\n            filterable: false,\n            renderCell: row => \n                <EditCar \n                    data={row}\n                    updateCar={updateCar} />\n            },   \n        {\n            field: '_links.self.href',\n            headerName: '',\n            sortable: false,\n            filterable: false,\n            renderCell: row => \n                <button onClick={() => onDelClick(row.id)}>Delete</button>\n        }\n    ];\n\n    const fetchCars = () => {\n        fetch(SERVER_URL + 'api/cars')\n        .then(response => response.json())\n        .then(data => setCars(data._embedded.cars))\n        .catch(err => console.error(err));\n    }\n\n    const onDelClick = (url) => {\n        if (window.confirm(\"Are you sure to delete?\")) {\n            fetch(url, {method: 'DELETE'})\n            .then(response => {\n            if(response.ok){\n                fetchCars();\n                setOpen(true);\n            }\n            else {\n                alert('Something went wrong!');\n            }    \n        })\n        .catch(err => console.error(err));\n        }\n    }\n\n    const addCar = (car) =>{\n        fetch(SERVER_URL + 'api/cars',\n        {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(car)\n        })\n        .then(response => {\n            if (response.ok)\n                fetchCars();\n            else\n                alert(\"Something went wrong!\");\n        })\n        .catch(err => console.error(err));\n    }\n\n    const updateCar = (car, link) =>{\n        fetch(link,\n        {\n            method: 'PUT',\n            headers: {'Content-Type' : 'application/json'},\n            body: JSON.stringify(car)\n        })\n        .then(response => {\n            if(response.ok)\n                fetchCars();\n            else\n                alert(\"Something went wrong!\");\n        })        \n        .catch(err => console.error(err));\n    }\n\n    useEffect( () => {\n        fetchCars();\n    }, []);\n\n    return(\n        <React.Fragment>\n            <AddCar addCar={addCar} />\n            <div style={{height: 500, width: '100%'}}>\n                <DataGrid\n                    rows={cars}\n                    columns={columns}\n                    disableRowSelectionOnClick={true}\n                    getRowId={row => row._links.self.href} \n                    slots={{Toolbar: CustomToolbar}}\n                    />\n                <Snackbar\n                    open={open}\n                    autoHideDuration={2000}\n                    onClose={() => setOpen(false)}\n                    message=\"Car deleted\"\n                />\n            </div>\n        </React.Fragment>\n    );\n}\n\nfunction CustomToolbar() {\n    return (\n        <GridToolbarContainer className={gridClasses.toolbarContainer}>\n            <GridToolbarExport />\n        </GridToolbarContainer>\n    );\n}\n\nexport default Carlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}