{"ast":null,"code":"var _jsxFileName = \"/Users/manfredi/Documents/Spring Boot & React/Eclipse Workspace/carfront/src/Components/Carlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from './constants';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Carlist() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const columns = [{\n    field: 'brand',\n    headerName: 'Brand',\n    width: 200\n  }, {\n    field: 'model',\n    headerName: 'Model',\n    width: 200\n  }, {\n    field: 'color',\n    headerName: 'Color',\n    width: 200\n  }, {\n    field: 'year',\n    headerName: 'Year',\n    width: 150\n  }, {\n    field: 'price',\n    headerName: 'Price',\n    width: 150\n  }, {\n    field: '_links.self.href',\n    headerName: '',\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelClick(row.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)\n  }];\n  const fetchCars = () => {\n    fetch(SERVER_URL + 'api/cars').then(response => response.json()).then(data => setCars(data._embedded.cars)).catch(err => console.error(err));\n  };\n  const onDelClick = url => {\n    fetch(url, {\n      method: 'DELETE'\n    }).then(response => fetchCars()).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 500,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: cars,\n      columns: columns,\n      getRowId: row => row._links.self.href\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(Carlist, \"/EQt6wAxOgtQYDavlJ/SWb5B/tI=\");\n_c = Carlist;\nexport default Carlist;\nvar _c;\n$RefreshReg$(_c, \"Carlist\");","map":{"version":3,"names":["React","useEffect","useState","SERVER_URL","DataGrid","jsxDEV","_jsxDEV","Carlist","_s","cars","setCars","columns","field","headerName","width","sortable","filterable","renderCell","row","onClick","onDelClick","id","children","fileName","_jsxFileName","lineNumber","columnNumber","fetchCars","fetch","then","response","json","data","_embedded","catch","err","console","error","url","method","style","height","rows","getRowId","_links","self","href","_c","$RefreshReg$"],"sources":["/Users/manfredi/Documents/Spring Boot & React/Eclipse Workspace/carfront/src/Components/Carlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from './constants';\nimport { DataGrid } from '@mui/x-data-grid';\n\nfunction Carlist() {\n    const [cars, setCars] = useState([]);\n    const columns = [\n        {field: 'brand', headerName: 'Brand', width: 200},\n        {field: 'model', headerName: 'Model', width: 200},\n        {field: 'color', headerName: 'Color', width: 200},\n        {field: 'year', headerName: 'Year', width: 150},\n        {field: 'price', headerName: 'Price', width: 150},\n        {\n            field: '_links.self.href',\n            headerName: '',\n            sortable: false,\n            filterable: false,\n            renderCell: row => \n                <button onClick={() => onDelClick(row.id)}>Delete</button>\n        }\n    ];\n\n    const fetchCars = () => {\n        fetch(SERVER_URL + 'api/cars')\n        .then(response => response.json())\n        .then(data => setCars(data._embedded.cars))\n        .catch(err => console.error(err));\n    }\n\n    const onDelClick = (url) => {\n        fetch(url, {method: 'DELETE'})\n        .then(response => fetchCars())\n        .catch(err => console.error(err));\n    }\n    \n    useEffect( () => {\n        fetchCars();\n    }, []);\n\n    return(\n        <div style={{height: 500, width: '100%'}}>\n            <DataGrid\n                rows={cars}\n                columns={columns}\n                getRowId={row => row._links.self.href} />\n        </div>\n    );\n}\n\nexport default Carlist;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,aAAa;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,OAAO,GAAG,CACZ;IAACC,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjD;IAACF,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjD;IAACF,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjD;IAACF,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC/C;IAACF,KAAK,EAAE,OAAO;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAG,CAAC,EACjD;IACIF,KAAK,EAAE,kBAAkB;IACzBC,UAAU,EAAE,EAAE;IACdE,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,KAAK;IACjBC,UAAU,EAAEC,GAAG,iBACXZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMC,UAAU,CAACF,GAAG,CAACG,EAAE,CAAE;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACjE,CAAC,CACJ;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAACzB,UAAU,GAAG,UAAU,CAAC,CAC7B0B,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAItB,OAAO,CAACsB,IAAI,CAACC,SAAS,CAACxB,IAAI,CAAC,CAAC,CAC1CyB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMf,UAAU,GAAIkB,GAAG,IAAK;IACxBV,KAAK,CAACU,GAAG,EAAE;MAACC,MAAM,EAAE;IAAQ,CAAC,CAAC,CAC7BV,IAAI,CAACC,QAAQ,IAAIH,SAAS,CAAC,CAAC,CAAC,CAC7BO,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAEDlC,SAAS,CAAE,MAAM;IACb0B,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIrB,OAAA;IAAKkC,KAAK,EAAE;MAACC,MAAM,EAAE,GAAG;MAAE3B,KAAK,EAAE;IAAM,CAAE;IAAAQ,QAAA,eACrChB,OAAA,CAACF,QAAQ;MACLsC,IAAI,EAAEjC,IAAK;MACXE,OAAO,EAAEA,OAAQ;MACjBgC,QAAQ,EAAEzB,GAAG,IAAIA,GAAG,CAAC0B,MAAM,CAACC,IAAI,CAACC;IAAK;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd;AAAClB,EAAA,CA3CQD,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AA6ChB,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}