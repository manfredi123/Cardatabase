{"ast":null,"code":"var _jsxFileName = \"/Users/manfredi/Documents/Spring Boot & React/Eclipse Workspace/carfront/src/Components/Carlist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from './constants';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Snackbar } from '@mui/material';\nimport AddCar from './AddCar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Carlist() {\n  _s();\n  const [cars, setCars] = useState([]);\n  const [open, setOpen] = useState(false);\n  const columns = [{\n    field: 'brand',\n    headerName: 'Brand',\n    width: 200\n  }, {\n    field: 'model',\n    headerName: 'Model',\n    width: 200\n  }, {\n    field: 'color',\n    headerName: 'Color',\n    width: 200\n  }, {\n    field: 'year',\n    headerName: 'Year',\n    width: 150\n  }, {\n    field: 'price',\n    headerName: 'Price',\n    width: 150\n  }, {\n    field: '_links.self.href',\n    headerName: '',\n    sortable: false,\n    filterable: false,\n    renderCell: row => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelClick(row.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }];\n  const fetchCars = () => {\n    fetch(SERVER_URL + 'api/cars').then(response => response.json()).then(data => setCars(data._embedded.cars)).catch(err => console.error(err));\n  };\n  const onDelClick = url => {\n    if (window.confirm(\"Are you sure to delete?\")) {\n      fetch(url, {\n        method: 'DELETE'\n      }).then(response => {\n        if (response.ok) {\n          fetchCars();\n          setOpen(true);\n        } else {\n          alert('Something went wrong!');\n        }\n      }).catch(err => console.error(err));\n    }\n  };\n  const addCar = car => {\n    fetch(SERVER_URL + 'api/cars', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(car)\n    }).then(response => {\n      if (response.ok) fetchCars();else alert(\"Something went wrong!\");\n    }).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    fetchCars();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddCar, {\n      addCar: addCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 500,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: cars,\n        columns: columns,\n        disableRowSelectionOnClick: true,\n        getRowId: row => row._links.self.href\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: 2000,\n        onClose: () => setOpen(false),\n        message: \"Car deleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Carlist, \"OH+7Whk0tvwXHwlcQTvKJAJQ8rs=\");\n_c = Carlist;\nexport default Carlist;\nvar _c;\n$RefreshReg$(_c, \"Carlist\");","map":{"version":3,"names":["React","useEffect","useState","SERVER_URL","DataGrid","Snackbar","AddCar","jsxDEV","_jsxDEV","Carlist","_s","cars","setCars","open","setOpen","columns","field","headerName","width","sortable","filterable","renderCell","row","onClick","onDelClick","id","children","fileName","_jsxFileName","lineNumber","columnNumber","fetchCars","fetch","then","response","json","data","_embedded","catch","err","console","error","url","window","confirm","method","ok","alert","addCar","car","headers","body","JSON","stringify","Fragment","style","height","rows","disableRowSelectionOnClick","getRowId","_links","self","href","autoHideDuration","onClose","message","_c","$RefreshReg$"],"sources":["/Users/manfredi/Documents/Spring Boot & React/Eclipse Workspace/carfront/src/Components/Carlist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { SERVER_URL } from './constants';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Snackbar } from '@mui/material';\nimport AddCar from './AddCar';\n\nfunction Carlist() {\n    const [cars, setCars] = useState([]);\n    const [open, setOpen] = useState(false);\n    const columns = [\n        {field: 'brand', headerName: 'Brand', width: 200},\n        {field: 'model', headerName: 'Model', width: 200},\n        {field: 'color', headerName: 'Color', width: 200},\n        {field: 'year', headerName: 'Year', width: 150},\n        {field: 'price', headerName: 'Price', width: 150},\n        {\n            field: '_links.self.href',\n            headerName: '',\n            sortable: false,\n            filterable: false,\n            renderCell: row => \n                <button onClick={() => onDelClick(row.id)}>Delete</button>\n        }\n    ];\n\n    const fetchCars = () => {\n        fetch(SERVER_URL + 'api/cars')\n        .then(response => response.json())\n        .then(data => setCars(data._embedded.cars))\n        .catch(err => console.error(err));\n    }\n\n    const onDelClick = (url) => {\n        if (window.confirm(\"Are you sure to delete?\")) {\n            fetch(url, {method: 'DELETE'})\n            .then(response => {\n            if(response.ok){\n                fetchCars();\n                setOpen(true);\n            }\n            else {\n                alert('Something went wrong!');\n            }    \n        })\n        .catch(err => console.error(err));\n        }\n    }\n\n    const addCar = (car) =>{\n        fetch(SERVER_URL + 'api/cars',\n        {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(car)\n        })\n        .then(response => {\n            if (response.ok)\n                fetchCars();\n            else\n                alert(\"Something went wrong!\");\n        })\n        .catch(err => console.error(err));\n    }\n    useEffect( () => {\n        fetchCars();\n    }, []);\n\n    return(\n        <React.Fragment>\n            <AddCar addCar={addCar} />\n            <div style={{height: 500, width: '100%'}}>\n                <DataGrid\n                    rows={cars}\n                    columns={columns}\n                    disableRowSelectionOnClick={true}\n                    getRowId={row => row._links.self.href} />\n                <Snackbar\n                    open={open}\n                    autoHideDuration={2000}\n                    onClose={() => setOpen(false)}\n                    message=\"Car deleted\"\n                />\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default Carlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}